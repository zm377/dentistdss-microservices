server:
  port: 8080

spring:
  application:
    name: api-gateway
  config:
    import: optional:configserver:http://zhifeimi:CSIT998CAPSTONE2025dentistdss@localhost:8888
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "https://dentist.mizhifei.press"
              - "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=0
        - id: oauth-service
          uri: lb://oauth-service
          predicates:
            - Path=/api/oauth2/**, /login/oauth2/**, /oauth2/authorization/**
          filters:
            - StripPrefix=1

        # Route for Spring Security OAuth2 endpoints (e.g. /login/oauth2/code/*, /oauth2/authorization/*)
        # These should typically be routed directly to the oauth-service without stripping an /api prefix if oauth-service is configured to handle them at root.
        - id: oauth-service-standard-paths
          uri: lb://oauth-service
          predicates:
            - Path=/login/oauth2/**, /oauth2/authorization/**
          filters:
            - StripPrefix=0

        # Route for custom API endpoints on oauth-service, if any, under /api/oauth2
        # (Currently, oauth-service doesn't expose custom API endpoints, it only handles OAuth flow)
        # If it did, e.g. /api/oauth2/custom, this would route to /custom on oauth-service
        # - id: oauth-service-api
        #   uri: lb://oauth-service
        #   predicates:
        #     - Path=/api/oauth2/** 
        #   filters:
        #     - StripPrefix=1

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
  instance:
    preferIpAddress: false

# Configure reactor netty server to use virtual threads if running on Java 21+
reactor:
  netty:
    http:
      server:
        accessLogEnabled: true


springdoc:
  swagger-ui:
    urls:
      - name: auth-service
        url: /v3/api-docs/auth-service
  api-docs:
    groups:
      enabled: true

logging:
  level:
    press.mizhifei.dentist: DEBUG
    org.springframework: TRACE




